<html><head>

<title>WL300g</title>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<meta http-equiv="Expires" content="Fri, Jun 12 1981 00:00:00 GMT">
<meta http-equiv="Cache-control" content="no-cache,must-revalidate">
<meta http-equiv="Pragma" content="no-cache">
<meta name="VI60_defaultClientScript" content="JavaScript">
<meta name="GENERATOR" content="Microsoft FrontPage 4.0">
<meta name="ProgId" content="FrontPage.Editor.Document">
<script language="JavaScript">
function isMode()
{if (parent.titleFrame.document.form.wan_nat_x.value == '1')
mode = 'Gateway';
else if (parent.titleFrame.document.form.wan_route_x.value == 'IP_Routed')
mode = 'Router';
else
mode = 'AP';
return mode;
}
function isModel()
{model = 'WL600';
pid = parent.titleFrame.document.form.productid.value;
if (pid.indexOf("WL500")!=-1) model = 'WL500';
else if (pid.indexOf("WL331")!=-1) model = 'WL331';
else if (pid.indexOf("WL520")!=-1 ||
pid.indexOf("WL530")!=-1) model = 'WL520';
else if (pid.indexOf("SnapAP")!=-1) model = 'SnapAP';
else if (pid.indexOf("WL300")!=-1) model = 'WL300';
else if (pid.indexOf("WL550")!=-1) model = 'WL550';
return model;
}
function isModel2()
{model2 = 'WL530';
pid = parent.titleFrame.document.form.productid.value;
if (pid.indexOf("WL520")!=-1) model2 = 'WL520';
return model2;
}
function isBand()
{band = 'g';
pid = parent.titleFrame.document.form.productid.value;
if (pid.indexOf("WL500b")!=-1) band = 'b';
return band;
}
function isCard()
{card = 'broadcom';
pid = parent.titleFrame.document.form.productid.value;
if (pid.indexOf("WL500bv2")!=-1) card = 'ralink';
return card;
}
function isFlash()
{flash = '4MB';
pid = parent.titleFrame.document.form.productid.value;
if (pid.indexOf("WL331g")!=-1) flash = '2MB';
else if (pid.indexOf("WL500g.Lite")!=-1) flash = '2MB';
else if (pid.indexOf("WL500b.Lite")!=-1) flash = '2MB';
else if (pid.indexOf("WL520")!=-1) flash = '2MB';
return flash;
}
function logout()
{if (confirm('If you want to logout this session, please press "OK" and make sure this configuration window is closed.'))
{location="Logout.asp";
}
}
function generateTree()
{var aux1, aux2, aux3, aux4
mode = isMode();
foldersTree = folderNode(mode + 'Setting')
aux1 = appendChild(foldersTree, leafNode("Home"))
aux1 = appendChild(foldersTree, leafNode("Quick Setup"))
if (isModel() == 'WL550')
{appendChild(aux1, generateDocEntry(0, "t2QWidzard", "Advanced_Wireless_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "t2QNetwork", "Advanced_Wireless_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "t2QDisk", "Advanced_UniqueKey_Content.asp", ""))
}
aux1 = appendChild(foldersTree, leafNode("Wireless"))
if (isModel() == 'WL600')
{appendChild(aux1, generateDocEntry(0, "Interface", "Advanced_Wireless_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "t2AES", "Advanced_UniqueKey_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Access Control", "Advanced_ACL_Content.asp",  ""))
}
else if(isModel() == 'WL520')
{appendChild(aux1, generateDocEntry(0, "Interface", "Advanced_Wireless_Content.asp", ""))
if (isModel2() == 'WL520')
appendChild(aux1, generateDocEntry(0, "Bridge", "Advanced_WMode_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Access Control", "Advanced_ACL_Content.asp",  ""))
appendChild(aux1, generateDocEntry(0, "Advanced", "Advanced_WAdvanced_Content.asp", ""))
}
else if(isModel() == 'SnapAP')
{appendChild(aux1, generateDocEntry(0, "Interface", "Advanced_Wireless_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Access Control", "Advanced_ACL_Content.asp",  ""))
appendChild(aux1, generateDocEntry(0, "Advanced", "Advanced_WAdvanced_Content.asp", ""))
}
else if (window.top.isCard() == 'ralink')
{appendChild(aux1, generateDocEntry(0, "Interface", "Advanced_Wireless_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Bridge", "Advanced_WMode_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Access Control", "Advanced_ACL_Content.asp",  ""))
appendChild(aux1, generateDocEntry(0, "Advanced", "Advanced_WAdvanced_Content.asp", ""))
}
else
{appendChild(aux1, generateDocEntry(0, "Interface", "Advanced_Wireless_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Bridge", "Advanced_WMode_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Access Control", "Advanced_ACL_Content.asp",  ""))
appendChild(aux1, generateDocEntry(0, "RADIUS Setting", "Advanced_WSecurity_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Advanced", "Advanced_WAdvanced_Content.asp", ""))
}
if (mode == 'AP')
{aux1 = appendChild(foldersTree, leafNode("IP Config"))
appendChild(aux1, generateDocEntry(0, "LAN", "Advanced_APLAN_Content.asp", ""))
}
else
{aux1 = appendChild(foldersTree, leafNode("IP Config"))
appendChild(aux1, generateDocEntry(0, "WAN & LAN", "Advanced_LANWAN_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "DHCP Server", "Advanced_DHCP_Content.asp", ""))
if (isModel()!='SnapAP')
{appendChild(aux1, generateDocEntry(0, "Route", "Advanced_GWStaticRoute_Content.asp", ""))
}
appendChild(aux1, generateDocEntry(0, "Miscellaneous", "Advanced_DDNS_Content.asp", ""))
if (mode == 'Gateway')
{aux1 = appendChild(foldersTree, leafNode("NAT Setting"))
appendChild(aux1, generateDocEntry(0, "Port Trigger",  "Advanced_PortTrigger_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Virtual Server",  "Advanced_VirtualServer_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Virtual DMZ",  "Advanced_Exposed_Content.asp", ""))
}
if (isModel()!='SnapAP')
{aux1 = appendChild(foldersTree, leafNode("Internet Firewall"))
appendChild(aux1, generateDocEntry(0, "Basic Config",  "Advanced_BasicFirewall_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "WAN & LAN Filter",  "Advanced_Firewall_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, " URL Filter",  "Advanced_URLFilter_Content.asp", ""))
}
if (isModel() == 'WL500'|| isModel() == 'WL331')
{appendChild(aux1, generateDocEntry(0, "MAC Filter",  "Advanced_MACFilter_Content.asp", ""))
}
}
if (isModel() != 'WL300' && isModel() != 'WL520' && isModel() != 'SnapAP' && isFlash() != '2MB')
{aux1 = appendChild(foldersTree, leafNode("USB Application"))
appendChild(aux1, generateDocEntry(0, "FTP Server", "Advanced_USBStorage_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Web Camera", "Advanced_WebCam_Content.asp", ""))
}
if (isModel() == 'WL500' && isFlash() != '2MB' && mode!='AP')
{aux1 = appendChild(foldersTree, leafNode("Bandwidth Management"))
appendChild(aux1, generateDocEntry(0, "Basic Config", "Advanced_QOS_Content.asp", ""))
}
if (isModel() == 'WL550')
{aux1 = appendChild(foldersTree, leafNode("t1Disk"))
appendChild(aux1, generateDocEntry(0, "t2DiskBasic", "Advanced_Wireless_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "t2DiskStatus", "Advanced_UniqueKey_Content.asp", ""))
aux1 = appendChild(foldersTree, leafNode("t1Share"))
appendChild(aux1, generateDocEntry(0, "t2ShareBasic", "Advanced_Wireless_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "t2ShareUser", "Advanced_UniqueKey_Content.asp", ""))
}
aux1 = appendChild(foldersTree, leafNode("System Setup"))
if (isModel() != 'WL520' && isModel() != 'SnapAP')
{appendChild(aux1, generateDocEntry(0, "Operation Mode", "Advanced_OperationMode_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Change Password", "Advanced_Password_Content.asp",""))
appendChild(aux1, generateDocEntry(0, "Firmware Upgrade", "Advanced_FirmwareUpgrade_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Setting Mangement", "Advanced_SettingBackup_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Factory Default", "Advanced_FactoryDefault_Content.asp", ""))
}
else
{appendChild(aux1, generateDocEntry(0, "Change Password", "Advanced_Password_Content.asp",""))
appendChild(aux1, generateDocEntry(0, "Firmware Upgrade", "Advanced_FirmwareUpgrade_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Setting Mangement", "Advanced_SettingBackup_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Factory Default", "Advanced_FactoryDefault_Content.asp", ""))
}
if (mode=='AP')
{aux1 = appendChild(foldersTree, leafNode("Status & Log"))
appendChild(aux1,generateDocEntry(0, "Status", "Main_AStatus_Content.asp", ""))
appendChild(aux1,generateDocEntry(0, "Wireless", "Main_WStatus_Content.asp", ""))
}
else
{aux1 = appendChild(foldersTree, leafNode("Status & Log"))
appendChild(aux1,generateDocEntry(0, "Status", "Main_GStatus_Content.asp", ""))
appendChild(aux1,generateDocEntry(0, "Wireless", "Main_WStatus_Content.asp", ""))
appendChild(aux1,generateDocEntry(0, "DHCP Leases", "Main_DHCPStatus_Content.asp", ""))
if (isModel() != 'SnapAP')
{appendChild(aux1,generateDocEntry(0, "Port Forwarding", "Main_IPTStatus_Content.asp", ""))
appendChild(aux1, generateDocEntry(0, "Routing Table", "Advanced_RouteStatus_Content.asp", ""))
appendChild(aux1,generateDocEntry(0, "System Log", "Main_LogStatus_Content.asp", ""))
}
}
aux1 = appendChild(foldersTree, leafNode("Logout"))
}
function clickOnFolderLink(folderName)
{mode = isMode();
if (folderName == "Home")
{if (mode == 'AP')
top.folderFrame.location="Main_Index_AccessPoint.asp"
else if (mode == 'Router')
top.folderFrame.location="Main_Index_Router.asp"
else
top.folderFrame.location="Main_Index_HomeGateway.asp"
}
else if (folderName == "Logout")
{logout();
}
else if (folderName == "Quick Setup")
{if (mode == 'AP')
top.folderFrame.location="Basic_AOperation_Content.asp"
else if (mode == 'Router')
top.folderFrame.location="Basic_ROperation_Content.asp"
else
top.folderFrame.location="Basic_GOperation_Content.asp"
}
else if (folderName == "Wireless")
{top.folderFrame.location="Advanced_Wireless_Content.asp"
}
else if (folderName == "IP Config" )
{if (mode == 'AP')
top.folderFrame.location="Advanced_APLAN_Content.asp"
else
top.folderFrame.location="Advanced_LANWAN_Content.asp"
}
else if (folderName == "Internet Firewall")
{top.folderFrame.location="Advanced_BasicFirewall_Content.asp"
}
else if (folderName == "Wireless Firewall")
{top.folderFrame.location="Advanced_DMZIP_Content.asp"
}
else if (folderName == "USB Application")
{top.folderFrame.location="Advanced_USBStorage_Content.asp"
}
else if (folderName == "Bandwidth Management")
{top.folderFrame.location="Advanced_QOS_Content.asp"
}
else if (folderName == "Router")
{top.folderFrame.location="Advanced_StaticRoute_Content.asp"
}
else if (folderName == "NAT Setting")
{top.folderFrame.location="Advanced_PortTrigger_Content.asp"
}
else if (folderName == "System Setup")
{if (isModel() == 'WL520' || isModel() == 'SnapAP')
top.folderFrame.location="Advanced_Password_Content.asp"
else
top.folderFrame.location="Advanced_OperationMode_Content.asp"
}
else if (folderName == "Status & Log")
{if (mode=='AP')
top.folderFrame.location="Main_AStatus_Content.asp"
else if (mode=='Router')
top.folderFrame.location="Main_RStatus_Content.asp"
else
top.folderFrame.location="Main_GStatus_Content.asp"
}
}
function clickOnFolderLinkClose(folderName)
{mode = isMode();
if (folderName == "Quick Setup")
{if (mode == 'AP')
top.folderFrame.location="Basic_Operation_Content.asp#Wireless"
else if (mode == 'Router')
top.folderFrame.location="Basic_Operation_Content.asp#WANSetting"
else
top.folderFrame.location="Basic_Operation_Content.asp#Broadband"
}
}
function folderNode(name)
{var arrayAux
arrayAux = new Array
arrayAux[0] = 1
arrayAux[1] = 1
arrayAux[2] = 0
arrayAux[3] = name
return arrayAux
}
function leafNode(name)
{var arrayAux
arrayAux = new Array
arrayAux[0] = 0
arrayAux[1] = 0
arrayAux[2] = 1
arrayAux[3] = name
return arrayAux
}
function appendChild(parent, child)
{parent[parent.length] = child
return child
}
function generateDocEntry(icon, docDescription, link)
{var retString =""
var szDoc =""
if (icon==0)
{retString = "<a href='"+link+"' class='wounderline' onClick='return top.checkChanged()' target=folderFrame><img src='./graph/doc.gif' alt='Opens in right frame'"
szDoc = "<a href='" + link + "' class='wounderline' onClick='return top.checkChanged()' target=folderFrame>" + docDescription + "</a>"
}
else
{retString = "<a href='http://"+link+"' class='wounderline' onClick='return top.checkChanged()' target=_blank><img src='./graph/link.gif' alt='Opens in new window'"
szDoc = "<a href='" + link + "' class='wounderline' onClick='return top.checkChanged()' target=_blank>" + docDescription + "</a>"
}
retString = retString + " border=0></a><td nowrap><font size=-1 face='Arial, Helvetica'>" + szDoc + "</font>"
return retString
}
function redrawTree()
{var doc = top.treeFrame.window.document
mode = isMode();
doc.clear();
doc.write("<html>");
doc.write("<head>");
doc.write("<link rel='stylesheet' type='text/css' href='style.css' media='screen'>");
doc.write("</head>");
doc.write("<body bgcolor='#660066' text='#FFFFFF'>");
doc.write("<table  width='144' border='0' cellspacing='0' cellpadding='0' height='125'>");
doc.write("<tr>");
doc.write("<td>");
doc.write("<div align='center'>");
if (isModel()=="WL520" || isModel()=="SnapAP" || isModel()=="WL331")
{doc.write("<img src='graph/asusLogo.jpg' width='144' height='66'></div>");
}
else
{if (mode == 'AP')
doc.write("<img src='graph/asusLogoA.jpg' width='144' height='66'></div>");
else if (mode == 'Gateway')
doc.write("<img src='graph/asusLogoG.jpg' width='144' height='66'></div>");
else if (mode == 'Router')
doc.write("<img src='graph/asusLogoR.jpg' width='144' height='66'></div>");
}
doc.write("<div align='left'style='margin-left:3'>");
doc.write("</td>");
doc.write("</tr>");
doc.write("</table>");
redrawNode(foldersTree, doc, 0, 1, "")
doc.close()
}
function redrawNode(foldersNode, doc, level, lastNode, leftSide)
{var j=0
var i=0
if (level>0)
{doc.write("<table border=0 cellspacing=0 cellpadding=0>")
doc.write("<tr><td valign = middle nowrap>")
doc.write(leftSide)
if (level>1)
if (lastNode) 
{doc.write("<img src='./graph/lastnode.gif' width=16 height=22>")
leftSide = leftSide + "<img src='./graph/blank.gif' width=16 height=22>"
}
else
{doc.write("<img src='./graph/node.gif' width=16 height=22>")
leftSide = leftSide + "<img src='./graph/vertline.gif' width=16 height=22>"
}
displayIconAndLabel(foldersNode, doc)
doc.write("</table>")
}
if (foldersNode.length > 4 && foldersNode[0]) 
{if (!foldersNode[2]) 
{level=level+1
for (i=4; i<foldersNode.length;i++)
if (i==foldersNode.length-1)
redrawNode(foldersNode[i], doc, level, 1, leftSide)
else
redrawNode(foldersNode[i], doc, level, 0, leftSide)
}
else 
{for (i=4; i<foldersNode.length;i++)
{doc.write("<table border=0 cellspacing=0 cellpadding=0 valign=center>")
doc.write("<tr><td nowrap>")
doc.write(leftSide)
if (i==foldersNode.length - 1)
doc.write("<img src='./graph/lastnode.gif' width=16 height=22>")
else
doc.write("<img src='./graph/node.gif' width=16 height=22>")
doc.write(foldersNode[i])
doc.write("</table>")
}
}
}
}
function displayIconAndLabel(foldersNode, doc)
{var szOpenIconName = "./graph/openfolder.gif";
var szCloseIconName = "./graph/closedfolder.gif";
if (foldersNode[3] == "Access Point")
{szOpenIconName = "./graph/apicon.gif";
szCloseIconName = "./graph/apicon.gif";
}
doc.write("<a href='javascript:top.openBranch(\"" + foldersNode[3] + "\")' onClick='return top.checkChanged()'><img src=")
if (foldersNode[1])
doc.write(szOpenIconName + " width=22 height=22 border=noborder></a>")
else
doc.write(szCloseIconName + " width=22 height=22 border=noborder></a>")
doc.write("<td valign=middle align=left nowrap>")
doc.write("<a href='javascript:top.openBranch(\"" + foldersNode[3] + "\")'  onClick='return top.checkChanged()'>")
doc.write("<font size=-1 face='Arial, Helvetica' class='wounderline'>"+foldersNode[3]+"</font></a>")
}
function closeFolders(foldersNode)
{var i=0
if (!foldersNode[2])
{for (i=4; i< foldersNode.length; i++)
closeFolders(foldersNode[i])
}
foldersNode[0] = 0
foldersNode[1] = 0
}
function clickOnFolderRec(foldersNode, folderName)
{var i=0
if (foldersNode[3] == folderName)
{if (foldersNode[0])
{closeFolders(foldersNode)
}
else
{clickOnFolderLink(folderName)
if (folderName != 'Quick Setup' && folderName != 'Home' && folderName != 'Logout' )
{foldersNode[0] = 1
foldersNode[1] = 1
}
else
{initializeTree()
}
}
}
else
{if (!foldersNode[2])
{for (i=4; i< foldersNode.length; i++)
{clickOnFolderRec(foldersNode[i], folderName)
}
}
}
}
function openBranch(branchName)
{clickOnFolderRec(foldersTree, branchName);
if (branchName=="WL600 Setting" && foldersTree[0]==0)
{top.folderFrame.location="Main_Index_Content.asp";
}
timeOutId = setTimeout("redrawTree()",100);
}
function initializeTree()
{foldersTree = 0;
generateTree();
redrawTree();
}
function checkChanged()
{if (pageChanged == '1')
{if (pageChangedCount==6)
{pageChangedCount = 0;
ret = 1;
}
else if (pageChangedCount>2)
{ret = confirm('Please, please, please press "Apply" or "Finish" to confirm setting if you DO NOT ignore your changes!!!!!');
}
else
ret = confirm('Page has been modified, are you sure to ignore changes?');
if (ret)
{pageChanged = 0;
pageChangedCount = 0;
}
else
{pageChangedCount++;
}
return ret;
}
else return true;
}
var foldersTree = 0
var timeOutId = 0
var pageChanged = 0;
var pageChangedCount = 0;
var goquick=0;
</script>
</head><frameset cols="120,506" border="0" framespacing="0" frameborder="0" onload="initializeTree()">

<frame src="WL300g_adv_bestanden/Main_List.htm" marginwidth="10" marginheight="0" name="treeFrame" noresize="noresize">
<frameset rows="80,*" border="0" framespacing="0" on="">
<frame src="WL300g_adv_bestanden/Title.htm" marginwidth="0" marginheight="0" name="titleFrame" noresize="noresize" scrolling="no">
<frame src="WL300g_adv_bestanden/Main_Index_AccessPoint.htm" name="folderFrame" marginwidth="0" marginheight="0" noresize="noresize">
</frameset>
</frameset>
<noframes>
<body bgcolor="#FFFFFF" text="#000000"></body>
</noframes>
</html>